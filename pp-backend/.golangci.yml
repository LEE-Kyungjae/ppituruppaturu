# .golangci.yml - Go 코드 품질을 위한 린터 설정

run:
  timeout: 5m
  tests: true
  skip-dirs:
    - vendor
    - testdata
    - build
    - bin
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_mock\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters:
  enable:
    - errcheck      # 에러 체크 누락 검사
    - gosimple      # 코드 간소화 제안
    - govet         # go vet 검사
    - ineffassign   # 비효율적인 할당 검사
    - staticcheck   # 정적 분석
    - typecheck     # 타입 체크
    - unused        # 사용되지 않는 코드 검사
    - gocyclo       # 순환 복잡도 검사
    - gofmt         # 포맷팅 검사
    - goimports     # import 정리 검사
    - revive        # 향상된 golint
    - gocritic      # 다양한 Go 관련 검사
    - bodyclose     # HTTP response body close 검사
    - rowserrcheck  # sql.Rows.Err() 검사
    - gosec         # 보안 관련 검사
    - misspell      # 오타 검사

linters-settings:
  gocyclo:
    min-complexity: 15

  govet:
    check-shadowing: true

  revive:
    min-confidence: 0.8
    rules:
      - name: var-naming
      - name: package-comments
      - name: exported
      - name: line-length-limit
        arguments: [120]

  gosec:
    excludes:
      - G104  # errcheck에서 처리

  goimports:
    local-prefixes: github.com/pitturu-ppaturu/backend

  errcheck:
    check-type-assertions: true
    check-blank: true

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  
  exclude-rules:
    # 테스트 파일에서는 일부 규칙 완화
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - gosec
    
    # 마이그레이션 파일 제외
    - path: internal/migrations/
      linters:
        - revive
    
    # main 함수는 복잡도 검사 제외
    - source: "func main"
      linters:
        - gocyclo