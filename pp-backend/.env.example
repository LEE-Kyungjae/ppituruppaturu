# =============================================================================
# Go JWT Authentication Server - Environment Configuration
# Copy this file to .env and update with your values
# =============================================================================

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Server Configuration
PORT=8080
HOST=localhost

# Application Mode (development, staging, production)
GIN_MODE=debug
APP_ENV=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Connection
# For Docker: localhost:5432
# For production: use your database host
DSN="postgres://postgres:postgres@localhost:5432/go_auth_db?sslmode=disable"
DATABASE_URL="postgres://postgres:postgres@localhost:5432/go_auth_db?sslmode=disable"

# Database Connection Pool Settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=25
DB_CONN_MAX_IDLE_TIME_MIN=5
DB_CONN_MAX_LIFETIME_HOUR=2

# =============================================================================
# JWT & AUTHENTICATION SETTINGS
# =============================================================================

# JWT Secrets - REPLACE WITH YOUR OWN SECURE KEYS!
# Generate with: openssl rand -hex 64
JWT_SECRET=your-jwt-secret-replace-with-secure-64-char-hex-string
REFRESH_SECRET=your-refresh-secret-replace-with-secure-64-char-hex-string

# Token Expiration Times
ACCESS_TTL_MIN=15
REFRESH_TTL_DAYS=7

# Password Hashing
BCRYPT_COST=12

# =============================================================================
# OAUTH INTEGRATION
# =============================================================================

# Kakao OAuth (Register at developers.kakao.com)
KAKAO_CLIENT_ID=your-kakao-client-id-from-developers.kakao.com
KAKAO_CLIENT_SECRET=your-kakao-client-secret-here
KAKAO_REDIRECT_URI=http://localhost:8080/api/v1/auth/kakao/callback

# Google OAuth (Register at console.cloud.google.com)
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis Connection
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# EMAIL/SMTP CONFIGURATION
# =============================================================================

# SMTP Settings for Email Services
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_USER=
SMTP_PASS=
SMTP_SENDER="Go Auth Server <noreply@localhost>"
SMTP_USE_TLS=false

# Production Email Settings (uncomment and configure for production)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password
# SMTP_SENDER="Your App <your-email@gmail.com>"
# SMTP_USE_TLS=true

# =============================================================================
# SECURITY & MIDDLEWARE SETTINGS
# =============================================================================

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_MAX_AGE=86400

# Rate Limiting
RATE_RPS=10
RATE_BURST=20

# Security Headers
SECURITY_HEADERS_ENABLED=true

# =============================================================================
# FILE STORAGE & UPLOADS
# =============================================================================

# Upload Configuration
MAX_UPLOAD_SIZE_MB=10
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf

# Local Storage Path
UPLOAD_PATH=./uploads

# AWS S3 Configuration (optional)
AWS_REGION=us-west-2
AWS_BUCKET_NAME=your-bucket-name
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key

# =============================================================================
# MONITORING & LOGGING
# =============================================================================

# Logging Configuration
LOG_LEVEL=debug
LOG_FORMAT=json
LOG_FILE_ENABLED=true
LOG_FILE_PATH=./logs/app.log

# Metrics & Monitoring
ENABLE_METRICS=true
METRICS_PATH=/metrics

# Health Check
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Payment Gateway (Stripe)
STRIPE_PUBLIC_KEY=pk_test_your_public_key
STRIPE_SECRET_KEY=sk_test_your_secret_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# PortOne PG Integration
PORTONE_API_KEY=your_portone_api_key_here
PORTONE_API_SECRET=your_portone_api_secret_here  
PORTONE_USER_CODE=your_portone_user_code_here
PORTONE_BASE_URL=https://api.iamport.kr

# Push Notifications (Firebase)
FIREBASE_SERVER_KEY=your-firebase-server-key
FIREBASE_SENDER_ID=your-sender-id

# Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXXXXX-X

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable/Disable Features
ENABLE_SWAGGER=true
ENABLE_PROFILING=false
ENABLE_REGISTRATION=true
ENABLE_PASSWORD_RESET=true
ENABLE_SOCIAL_LOGIN=true
ENABLE_FILE_UPLOAD=true
ENABLE_CHAT=true
ENABLE_GAMES=true
ENABLE_PAYMENTS=true

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Development Tools
HOT_RELOAD=true
DEBUG_SQL=false
ENABLE_REQUEST_LOGGING=true

# Testing Configuration
TEST_DATABASE_URL="postgres://postgres:postgres@localhost:5432/go_auth_db_test?sslmode=disable"
TEST_JWT_SECRET=test-jwt-secret-for-testing-environment-only-never-use-in-production
TEST_REFRESH_SECRET=test-refresh-secret-for-testing-environment-only-never-use-in-production

# =============================================================================
# PERFORMANCE SETTINGS
# =============================================================================

# Server Timeouts
READ_TIMEOUT_SEC=30
WRITE_TIMEOUT_SEC=30
IDLE_TIMEOUT_SEC=60

# Cache Settings
CACHE_TTL_MIN=60
CACHE_ENABLED=true

# =============================================================================
# DEPLOYMENT SPECIFIC
# =============================================================================

# Docker Settings
DOCKER_ENV=development

# Health Check URLs (for load balancers)
READINESS_PATH=/ready
LIVENESS_PATH=/live

# Graceful Shutdown
SHUTDOWN_TIMEOUT_SEC=30

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# PRODUCTION CHECKLIST:
# 1. Change all default secrets (JWT_SECRET, REFRESH_SECRET, etc.)
# 2. Set GIN_MODE=release
# 3. Set APP_ENV=production  
# 4. Configure proper database connection (not localhost)
# 5. Set up proper SMTP settings
# 6. Configure CORS_ORIGINS for your frontend domains
# 7. Set strong rate limiting values
# 8. Enable security headers
# 9. Set LOG_LEVEL=info or warn
# 10. Configure external services (payment, push notifications)
# 11. Set proper file upload limits and storage
# 12. Review and set appropriate feature flags
# 13. Configure monitoring and alerting
# 14. Set up SSL/TLS certificates
# 15. Test all integrations in staging environment